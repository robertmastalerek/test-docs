name: Deploy Hugo Docs to GitHub Pages

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Hugo
        id: cache-hugo
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/hugo
          key: hugo-${{ runner.os }}-0.54.0

      - name: Install Hugo if not cached
        if: steps.cache-hugo.outputs.cache-hit != 'true'
        run: |
          HUGO_VERSION=0.54.0
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.deb
          sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Build documentation
        run: |
          for section in $SECTIONS; do
            echo "Building Hugo site for $section..."
            hugo --source $section --minify -d "public-$section"
          done

      - name: Push changes to branches
        run: |
          for section in $SECTIONS; do
            echo "Pushing changes for $section..."
          
            # Sprawdź, czy katalog istnieje
            if [ -d "public-$section" ]; then
              git checkout --orphan $section  # Tworzymy czysty branch bez historii
              git rm -rf .  # Usuwamy wszystko z brancha
          
              # Przenosimy tylko zawartość katalogu public-$section do root-a
              # Znajdujemy wszystkie pliki i foldery, kopiujemy je do root-a
              find public-$section -mindepth 1 -maxdepth 1 -exec mv {} ./ \;
          
              git add .
              git commit -m "Update $section documentation" || echo "No changes to commit"
              git push origin $section --force
            else
              echo "Skipping $section – directory public-$section not found."
            fi
          done
        shell: bash
        env:
          SECTIONS: "enterprise user-guide get-started security"

  publish:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Copy built files to gh-pages/docs/{branch}
        run: |
          cd gh-pages
          for section in $SECTIONS; do
            echo "Publishing $section to GitHub Pages..."
          
            # Usuwamy wszystkie pliki w gh-pages/docs/$section
            rm -rf docs/$section/*
          
            # Kopiujemy tylko zawartość public-$section do docs/$section (bez struktury folderów)
            find ../public-$section -mindepth 1 -maxdepth 1 -exec cp -r {} docs/$section/ \;
          done
          
          # Dodajemy .nojekyll, aby GitHub Pages nie próbował przetwarzać plików jako Jekyll
          touch .nojekyll

      - name: Commit and push changes
        run: |
          cd gh-pages
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Deploy documentation to GitHub Pages" || echo "No changes to commit"
          git push origin gh-pages

#      - name: Determine branch name
#        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
#
#      - name: Build Hugo site
#        run: hugo --minify -d "public-${{ env.BRANCH_NAME }}"
#
#      - name: Checkout `gh-pages` branch
#        uses: actions/checkout@v4
#        with:
#          ref: gh-pages
#          path: gh-pages
#
#      - name: Move built files to `gh-pages/docs/{branch}`
#        run: |
#          mkdir -p gh-pages/docs/${{ env.BRANCH_NAME }}
#          rm -rf gh-pages/docs/${{ env.BRANCH_NAME }}/*
#          mv public-${{ env.BRANCH_NAME }}/* gh-pages/docs/${{ env.BRANCH_NAME }}/
#
#      - name: Commit and push changes
#        run: |
#          cd gh-pages
#          git config --global user.email "github-actions[bot]@users.noreply.github.com"
#          git config --global user.name "GitHub Actions"
#          git add .
#          git commit -m "Deploy ${{ env.BRANCH_NAME }} to GitHub Pages" || echo "No changes to commit"
#          git push origin gh-pages
